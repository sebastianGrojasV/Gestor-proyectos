<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8"> <!-- Define la codificacion de caracteres -->
  <title>Editar Tarea</title> <!-- Titulo de la pagina -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> <!-- Enlace a Bootstrap para el estilo -->
  <script src="/theme.js" defer></script> <!-- Enlace al script para manejar el cambio de tema -->
  <link rel="stylesheet" href="/style.css"> <!-- Enlace a la hoja de estilo personalizada -->
</head>
<body>
  <div class="container py-4">

    <h2 class="mb-4">‚úèÔ∏è Editar Tarea</h2> <!-- Titulo de la pagina -->

    <!-- Boton para cambiar tema -->
    <div class="text-end mb-3">
      <button id="toggleTheme" class="btn-link">
        <span id="themeIcon">üåô</span> Cambiar tema <!-- Boton para cambiar entre temas claro y oscuro -->
      </button>
    </div>

    <!-- Formulario para editar la tarea -->
    <div class="edit-form">
      <form action="/task/<%= task._id %>/update" method="POST">
        <input name="name" value="<%= task.name %>" class="form-control" required>

  <textarea name="description" class="form-control" placeholder="Descripci√≥n adicional"><%= task.description %></textarea>

  <label for="limitDate">Fecha l√≠mite:</label>
  <input type="date" name="limitDate" class="form-control"
         value="<%= task.limitDate ? task.limitDate.toISOString().split('T')[0] : '' %>">

  <button class="btn btn-primary mt-2" type="submit">Guardar cambios</button>
  <a href="/project/<%= project._id %>" class="btn btn-secondary mt-2">Cancelar</a>
</form>


  </div>

  <script>
    const toggleButton = document.getElementById('toggleTheme'); // Obtiene el boton para cambiar tema
    const themeIcon = document.getElementById('themeIcon'); // Obtiene el icono de tema
    const body = document.body; // Obtiene el cuerpo del documento

    // Funcion para actualizar el icono dependiendo del tema
    function actualizarIcono() {
      themeIcon.textContent = body.classList.contains('dark-mode') ? '‚òÄÔ∏è' : 'üåô'; // Cambia el icono entre sol y luna
    }

    // Cargar estado guardado del tema
    if (localStorage.getItem('theme') === 'dark') {
      body.classList.add('dark-mode'); // Aplica el modo oscuro si esta guardado
    }

    actualizarIcono(); // Actualiza el icono al cargar la pagina

    toggleButton.addEventListener('click', () => { // Agrega un evento de clic al boton de tema
      body.classList.toggle('dark-mode'); // Activa o desactiva el modo oscuro
      const theme = body.classList.contains('dark-mode') ? 'dark' : 'light'; // Determina el tema actual
      localStorage.setItem('theme', theme); // Guarda el tema en localStorage
      actualizarIcono(); // Actualiza el icono despues de cambiar el tema
    });
  </script>
</body>
</html>


