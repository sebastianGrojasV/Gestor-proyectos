<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Tareas - <%= project.name %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/style.css">
  <script src="/theme.js" defer></script>
</head>
<body class="container py-4">

  <div class="user-info mb-3 d-flex justify-content-between align-items-center">
    <span>👤 Conectado como <strong><%= currentUser.username %></strong></span>
    <form action="/logout" method="POST">
      <button type="submit" class="btn btn-outline-secondary btn-sm">Cerrar sesión</button>
    </form>
  </div>

  <div class="d-flex justify-content-between align-items-center mb-3">
    <a href="/" class="btn btn-outline-primary btn-sm">← Volver a proyectos</a>
    <button id="toggleTheme" class="btn btn-outline-secondary btn-sm">
      <span id="themeIcon">🌙</span> Cambiar tema
    </button>
  </div>

  <h2 class="mb-4"><%= project.name %></h2>

  <div class="card p-4 mb-4 shadow-sm">
    <h5 class="mb-3">Agregar nueva tarea</h5>
    <form action="/project/<%= project._id %>/task" method="POST">
      <div class="mb-2">
        <input type="text" name="name" class="form-control" placeholder="Nombre de la tarea" required>
      </div>
      <div class="mb-2">
        <textarea name="description" class="form-control" placeholder="Descripción adicional (opcional)"></textarea>
      </div>
      <div class="mb-3">
        <input type="date" name="limitDate" class="form-control" placeholder="Fecha límite">
      </div>
      <button type="submit" class="btn btn-primary">Agregar tarea</button>
    </form>
  </div>

  <% const renderTasks = (titulo, tasksArray, badge = "") => { %>
    <% if (tasksArray.length > 0) { %>
      <h4 class="mt-4 mb-3"><%= titulo %></h4>
      <% tasksArray.forEach(task => {
        const limitDate = task.limitDate ? new Date(task.limitDate) : null;
        const hoy = new Date();
        const diasRestantes = limitDate ? Math.ceil((limitDate - hoy) / (1000 * 60 * 60 * 24)) : null;
      %>
        <div class="card mb-3 p-3 shadow-sm">
          <h5 class="mb-1"><%= task.name %></h5>
          <% if (task.description) { %>
            <p><em><%= task.description %></em></p>
          <% } %>
          <% if (limitDate) { %>
            <p class="mb-1">
              <strong>Fecha límite:</strong> <%= limitDate.toLocaleDateString('es-ES') %>
              <% if (badge === "urgente") { %>
                <span class="badge bg-warning text-dark ms-2">🚨 <%= diasRestantes %> día<%= diasRestantes === 1 ? '' : 's' %> restante<%= diasRestantes === 1 ? '' : 's' %></span>
              <% } else if (badge === "vencida") { %>
                <span class="badge bg-danger ms-2">Vencida</span>
              <% } %>
            </p>
          <% } %>

          <div class="d-flex flex-wrap gap-2 mt-2">
            <form action="/task/<%= task._id %>/toggle" method="POST">
              <button type="submit" class="btn btn-outline-primary btn-sm">
                <%= task.completed ? "Marcar como pendiente" : "Marcar como completada" %>
              </button>
            </form>
            <form action="/task/<%= task._id %>/edit" method="GET">
              <button type="submit" class="btn btn-outline-warning btn-sm">Modificar</button>
            </form>
            <form action="/task/<%= task._id %>/delete" method="POST">
              <button type="submit" class="btn btn-outline-danger btn-sm">Eliminar</button>
            </form>
          </div>
        </div>
      <% }) %>
    <% } %>
  <% } %>

  <% renderTasks("🚨 Tareas urgentes (menos de 7 días)", urgentes, "urgente") %>
  <% renderTasks("❌ Tareas vencidas", vencidas, "vencida") %>
  <% renderTasks("📅 Tareas próximas", proximas) %>
  <% renderTasks("✅ Tareas completadas", completadas) %>

  <script>
    const toggleButton = document.getElementById('toggleTheme');
    const themeIcon = document.getElementById('themeIcon');
    const body = document.body;

    function actualizarIcono() {
      themeIcon.textContent = body.classList.contains('dark-mode') ? '☀️' : '🌙';
    }

    if (localStorage.getItem('theme') === 'dark') {
      body.classList.add('dark-mode');
    }

    actualizarIcono();

    toggleButton.addEventListener('click', () => {
      body.classList.toggle('dark-mode');
      const theme = body.classList.contains('dark-mode') ? 'dark' : 'light';
      localStorage.setItem('theme', theme);
      actualizarIcono();
    });
  </script>

</body>
</html>